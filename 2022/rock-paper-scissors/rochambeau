#!/usr/bin/env ruby

require "pathname"

module Rochambeau
  SHAPE_SCORES = {
    "Rock"     => 1,
    "Paper"    => 2,
    "Scissors" => 3
  }.freeze

  WINNERS_VS_LOSERS = {
    "Rock"     => "Scissors",
    "Paper"    => "Rock",
    "Scissors" => "Paper"
  }.freeze

  OUTCOME_SCORES = WINNERS_VS_LOSERS.map do |winner, loser|
    {
      [winner, loser]  => 0,
      [winner, winner] => 3,
      [loser,  winner] => 6
    }
  end.reduce(&:merge).freeze

  class Solution1
    SHAPE_MAP = {
      "A" => "Rock",
      "B" => "Paper",
      "C" => "Scissors",
      "X" => "Rock",
      "Y" => "Paper",
      "Z" => "Scissors"
    }.freeze

    attr_reader :strategy_file

    def initialize(strategy_file)
      @strategy_file = Pathname(strategy_file)
    end

    def run
      rounds = strategy_file.readlines.map { |line| SHAPE_MAP.values_at(*line.strip.split(/\s+/)) }
      scores = rounds.map do |opponent, player|
        SHAPE_SCORES[player] + OUTCOME_SCORES[[opponent, player]]
      end
      puts "Solution #1: #{scores.sum}"
    end
  end

  class Solution2
    ROUND_MAP = {
      %w[A X] => %w[Rock     Scissors],
      %w[A Y] => %w[Rock     Rock    ],
      %w[A Z] => %w[Rock     Paper   ],
      %w[B X] => %w[Paper    Rock    ],
      %w[B Y] => %w[Paper    Paper   ],
      %w[B Z] => %w[Paper    Scissors],
      %w[C X] => %w[Scissors Paper   ],
      %w[C Y] => %w[Scissors Scissors],
      %w[C Z] => %w[Scissors Rock    ]
    }.freeze

    attr_reader :strategy_file

    def initialize(strategy_file)
      @strategy_file = Pathname(strategy_file)
    end

    def run
      rounds = strategy_file.readlines.map { |line| ROUND_MAP[line.strip.split(/\s+/)] }
      scores = rounds.map do |opponent, player|
        SHAPE_SCORES[player] + OUTCOME_SCORES[[opponent, player]]
      end
      puts "Solution #2: #{scores.sum}"
    end
  end
end

Rochambeau::Solution1.new(*ARGV).run
Rochambeau::Solution2.new(*ARGV).run
